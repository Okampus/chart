apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hasura.name" . }}
  labels:
    {{- include "hasura.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "hasura.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      creationTimestamp: null
      labels: {{- include "hasura.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: hasura
          image: hasura/graphql-engine:v2.30.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ include "hasura.configMap" . }}
            - secretRef:
                name: {{ include "hasura.adminSecret" . }}
          env:
            - name: ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "okampus.keysSecret" . }}
                  key: ACCESS_TOKEN_SECRET
            - name: JWT_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: {{ include "okampus.configMap" . }}
                  key: JWT_ALGORITHM
            - name: HASURA_GRAPHQL_JWT_SECRET
              value: {"type": "$(JWT_ALGORITHM)", "key": "$(ACCESS_TOKEN_SECRET)"}
            - name: HASURA_GRAPHQL_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "okampus.postgresSecret" . }}
                  key: PSQL_CONNECTION_STRING
          ports:
            - name: hasura
              containerPort: {{ .Values.hasura.service.port }}
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 2
            httpGet:
              path: /healthz
              port: hasura
          startupProbe:
            failureThreshold: 15
            periodSeconds: 5
            timeoutSeconds: 2
            httpGet:
              path: /healthz
              port: hasura
          resources: {{- toYaml .Values.hasura.resources | nindent 12 -}}

