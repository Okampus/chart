apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hasura.name" . }}
  labels:
    {{- include "hasura.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "hasura.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "hasura.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ include "hasura.configMap" . }}
            - secretRef:
                name: {{ include "hasura.vercel" . }}
          env:
            - name: NODE_ENV
              value: "production"
          ports:
            - name: hasura
              containerPort: {{ .Values.hasura.service.port }}
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 2
            httpGet:
              path: /healthz
              port: hasura
          startupProbe:
            failureThreshold: 15
            periodSeconds: 5
            timeoutSeconds: 2
            httpGet:
              path: /healthz
              port: hasura
          resources: {{- toYaml .Values.hasura.resources | nindent 12 -}}

