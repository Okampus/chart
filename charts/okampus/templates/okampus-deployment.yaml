apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "okampus.name" . }}
  labels:
    {{- include "okampus.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "okampus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "okampus.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "okampus.configMap" . }}
            - secretRef:
                name: {{ include "okampus.keysSecret" . }}
            - secretRef:
                name: {{ include "okampus.novuSecret" . }}
            - secretRef:
                name: {{ include "okampus.s3Secret" . }}
            - secretRef:
                name: {{ include "okampus.adminSecret" . }}
            - secretRef:
                name: {{ include "okampus.postgresSecret" . }}
            - secretRef:
                name: {{ include "okampus.baseTenantSecret" . }}
            {{- if .Values.envFrom }}
            {{- toYaml .Values.envFrom | nindent 12 }}
            {{- end }}
          env:
            - name: NODE_ENV
              value: "production"
            {{- if .Values.meilisearch.enabled -}}
            - name: MEILISEARCH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-master-key" (include "okampus.name" .) .Values.meilisearch.nameOverride }}
                  key: MEILI_MASTER_KEY
                  optional: false
            {{ end }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{ end }}
          ports:
            - name: api
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 2
            httpGet:
              path: /health
              port: api
          startupProbe:
            failureThreshold: 15
            periodSeconds: 5
            timeoutSeconds: 2
            httpGet:
              path: /health
              port: api
          resources:
            {{- toYaml .Values.resources | nindent 12 -}}
      {{- with .Values.nodeSelector -}}
      nodeSelector:
        {{- toYaml . | nindent 8 -}}
      {{- end -}}
    {{- with .Values.affinity -}}
      affinity:
        {{- toYaml . | nindent 8 -}}
    {{- end -}}
    {{- with .Values.tolerations -}}
      tolerations:
        {{- toYaml . | nindent 8 -}}
    {{- end -}}
